{
  "info": {
    "_postman_id": "a1b2c3d4-e5f6-g7h8-i9j0-k1l2m3n4o5p6",
    "name": "Store Rating API",
    "description": "API collection for Store Rating Application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "User authentication endpoints",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Smith Customer Example\",\n  \"email\": \"john.smith@example.com\",\n  \"password\": \"Password@123\",\n  \"address\": \"123 Main Street, Springfield, IL 62701\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            },
            "description": "Register a new user with role 'USER'"
          },
          "response": []
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john.smith@example.com\",\n  \"password\": \"Password@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            },
            "description": "Login and get authentication tokens"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "me"]
            },
            "description": "Get current user profile"
          },
          "response": []
        },
        {
          "name": "Update Password",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"Password@123\",\n  \"newPassword\": \"NewPassword@123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/password",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "password"]
            },
            "description": "Update user password"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/refresh-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "refresh-token"]
            },
            "description": "Refresh authentication token"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            },
            "description": "Logout user"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "description": "User management endpoints (Admin only)",
      "item": [
        {
          "name": "Get All Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "name",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "email",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "address",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "role",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "Get all users with pagination and optional filters"
          },
          "response": []
        },
        {
          "name": "Get User By ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Get a user by ID"
          },
          "response": []
        },
        {
          "name": "Create User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Doe Administrator Example\",\n  \"email\": \"jane.admin@example.com\",\n  \"password\": \"Admin@123\",\n  \"address\": \"456 Oak Avenue, Springfield, IL 62701\",\n  \"role\": \"ADMIN\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users"]
            },
            "description": "Create a new user (Admin only)"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Jane Doe Administrator\",\n  \"address\": \"789 Pine Street, Springfield, IL 62701\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Update a user (Admin only)"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/users/{{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "users", "{{userId}}"]
            },
            "description": "Delete a user (Admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Stores",
      "description": "Store management endpoints",
      "item": [
        {
          "name": "Get All Stores",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/stores?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stores"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "name",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "email",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "address",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "Get all stores with pagination and optional filters"
          },
          "response": []
        },
        {
          "name": "Get Store By ID",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/stores/{{storeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stores", "{{storeId}}"]
            },
            "description": "Get a store by ID"
          },
          "response": []
        },
        {
          "name": "Create Store",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Grocery Mart\",\n  \"email\": \"info@grocerymart.example.com\",\n  \"address\": \"100 Market Street, Springfield, IL 62701\",\n  \"owner_id\": \"{{storeOwnerId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/stores",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stores"]
            },
            "description": "Create a new store (Admin only)"
          },
          "response": []
        },
        {
          "name": "Update Store",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Grocery Mart\",\n  \"address\": \"101 Market Avenue, Springfield, IL 62701\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/stores/{{storeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stores", "{{storeId}}"]
            },
            "description": "Update a store (Admin only)"
          },
          "response": []
        },
        {
          "name": "Delete Store",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/stores/{{storeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stores", "{{storeId}}"]
            },
            "description": "Delete a store (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get Store Raters",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/stores/{{storeId}}/raters?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "stores", "{{storeId}}", "raters"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get users who rated a store (Admin or Store Owner)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Ratings",
      "description": "Rating management endpoints",
      "item": [
        {
          "name": "Get All Ratings",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/ratings?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ratings"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                },
                {
                  "key": "userId",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "storeId",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "minRating",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "maxRating",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "Get all ratings with pagination and optional filters (Admin only)"
          },
          "response": []
        },
        {
          "name": "Submit Rating",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"store_id\": \"{{storeId}}\",\n  \"rating_value\": 4\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/ratings",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ratings"]
            },
            "description": "Submit or update a rating for a store (User only)"
          },
          "response": []
        },
        {
          "name": "Get User Rating For Store",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{token}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/ratings/store/{{storeId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ratings", "store", "{{storeId}}"]
            },
            "description": "Get a user's rating for a specific store (User only)"
          },
          "response": []
        },
        {
          "name": "Get Total Ratings Count",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/ratings/count",
              "host": ["{{baseUrl}}"],
              "path": ["api", "ratings", "count"]
            },
            "description": "Get total count of ratings (Admin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Dashboard",
      "description": "Dashboard data endpoints",
      "item": [
        {
          "name": "Get Admin Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{adminToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/admin",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", "admin"]
            },
            "description": "Get admin dashboard statistics (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get Store Owner Dashboard",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{storeOwnerToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/dashboard/store-owner?page=1&limit=10",
              "host": ["{{baseUrl}}"],
              "path": ["api", "dashboard", "store-owner"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get store owner dashboard data (Store Owner only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "System",
      "description": "System and utility endpoints",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check API health status"
          },
          "response": []
        },
        {
          "name": "Get CSRF Token",
          "request": {
            "method": "GET",
            "url": {
              "raw": "{{baseUrl}}/api/csrf-token",
              "host": ["{{baseUrl}}"],
              "path": ["api", "csrf-token"]
            },
            "description": "Get CSRF token for web applications"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Store tokens after login",
          "if (pm.info.requestName === \"Login\" && pm.response.code === 200) {",
          "    const responseJson = pm.response.json();",
          "    if (responseJson.success && responseJson.data.token) {",
          "        // Store regular user token",
          "        pm.environment.set(\"token\", responseJson.data.token);",
          "        pm.environment.set(\"refreshToken\", responseJson.data.refreshToken);",
          "        ",
          "        // Check role and store specialized tokens",
          "        if (responseJson.data.user.role === \"ADMIN\") {",
          "            pm.environment.set(\"adminToken\", responseJson.data.token);",
          "        } else if (responseJson.data.user.role === \"STORE_OWNER\") {",
          "            pm.environment.set(\"storeOwnerToken\", responseJson.data.token);",
          "        }",
          "        ",
          "        // Store user ID",
          "        pm.environment.set(\"userId\", responseJson.data.user.id);",
          "    }",
          "}",
          "",
          "// Store store ID after creation",
          "if (pm.info.requestName === \"Create Store\" && pm.response.code === 201) {",
          "    const responseJson = pm.response.json();",
          "    if (responseJson.success && responseJson.data.id) {",
          "        pm.environment.set(\"storeId\", responseJson.data.id);",
          "    }",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string",
      "description": "Base URL for the API"
    }
  ]
}